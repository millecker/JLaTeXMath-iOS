//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/scilab/forge/jlatexmath/parser/NodeI.java
//


#include "J2ObjC_source.h"
#include "AttrI.h"
#include "ElementI.h"
#include "NodeI.h"
#include "Attr.h"
#include "Element.h"
#include "org/w3c/dom/Attr.h"
#include "org/w3c/dom/Element.h"
#include "org/w3c/dom/Node.h"

@interface NodeI () {
 @public
  id<OrgW3cDomNode> impl_;
}

@end

J2OBJC_FIELD_SETTER(NodeI, impl_, id<OrgW3cDomNode>)

@implementation NodeI

- (instancetype)initWithOrgW3cDomNode:(id<OrgW3cDomNode>)impl {
  NodeI_initWithOrgW3cDomNode_(self, impl);
  return self;
}

- (jshort)getNodeType {
  return [((id<OrgW3cDomNode>) nil_chk(impl_)) getNodeType];
}

- (id<OrgScilabForgeJlatexmathPlatformParserElement>)castToElement {
  return new_ElementI_initWithOrgW3cDomElement_((id<OrgW3cDomElement>) check_protocol_cast(impl_, @protocol(OrgW3cDomElement)));
}

- (id<OrgScilabForgeJlatexmathPlatformParserAttr>)castToAttr {
  return new_AttrI_initWithOrgW3cDomAttr_((id<OrgW3cDomAttr>) check_protocol_cast(impl_, @protocol(OrgW3cDomAttr)));
}

@end

void NodeI_initWithOrgW3cDomNode_(NodeI *self, id<OrgW3cDomNode> impl) {
  (void) NSObject_init(self);
  self->impl_ = impl;
}

NodeI *new_NodeI_initWithOrgW3cDomNode_(id<OrgW3cDomNode> impl) {
  NodeI *self = [NodeI alloc];
  NodeI_initWithOrgW3cDomNode_(self, impl);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NodeI)
